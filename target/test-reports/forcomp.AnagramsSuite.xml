<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="joao-Inspiron-13-5378" name="forcomp.AnagramsSuite" tests="11" errors="0" failures="1" skipped="0" time="0.712" timestamp="2020-06-17T23:19:21">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/lib/i386-linux-gnu:/usr/lib/i386-linux-gnu:/lib32:/usr/lib32:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.171-b11"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="BR"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/joao/Documentos/Programas/Scala/forcomp"/><property name="java.runtime.version" value="1.8.0_171-b11"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/tmp/jna-3267635/jna3079464967245135025.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.15.0-106-lowlatency"/><property name="user.home" value="/home/joao"/><property name="user.timezone" value="America/Sao_Paulo"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="joao"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="pt"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_171"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.desktop" value="gnome"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="forcomp.AnagramsSuite" name="get: eat (10pts)" time="0.579">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="sentenceOccurrences: abcd e (5pts)" time="0.001">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="wordAnagrams player (2pts)" time="0.003">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="combinations: [] (8pts)" time="0.004">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="sentence anagrams: Linux rulez (10pts)" time="0.105">
                                                 <failure message="java.lang.AssertionError: expected:&lt;HashSet(List(Zulu, nil, Rex), List(Rex, Uzi, null), List(rulez, Linux), List(Zulu, Rex, Lin), List(Zulu, Rex, nil), List(Rex, Lin, Zulu), List(Rex, Zulu, nil), List(Lin, Zulu, Rex), List(null, Uzi, Rex), List(Zulu, Lin, Rex), List(Linux, rulez), List(Uzi, null, Rex), List(Uzi, Rex, null), List(Lin, Rex, Zulu), List(nil, Rex, Zulu), List(nil, Zulu, Rex), List(null, Rex, Uzi), List(Rex, Zulu, Lin), List(Rex, nil, Zulu), List(Rex, null, Uzi))&gt; but was:&lt;HashSet(List(Rex, nu, Zulu, ill), List(ex, nu, Zulu, rill), List(urn, Zulu, ill, ex), List(run, Zulu, ill, ex), List(nu, Zulu, ex, rill), List(nu, Zulu, Rex, ill), List(nu, ex, Zulu, rill), List(run, Zulu, ex, ill), List(nu, Zulu, ill, Rex), List(nu, Rex, Zulu, ill), List(run, ex, Zulu, ill), List(ex, urn, Zulu, ill), List(nu, Zulu, rill, ex), List(ex, run, Zulu, ill), List(urn, Zulu, ex, ill), List(urn, ex, Zulu, ill))&gt;" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.lang.AssertionError: expected:&lt;HashSet(List(Zulu, nil, Rex), List(Rex, Uzi, null), List(rulez, Linux), List(Zulu, Rex, Lin), List(Zulu, Rex, nil), List(Rex, Lin, Zulu), List(Rex, Zulu, nil), List(Lin, Zulu, Rex), List(null, Uzi, Rex), List(Zulu, Lin, Rex), List(Linux, rulez), List(Uzi, null, Rex), List(Uzi, Rex, null), List(Lin, Rex, Zulu), List(nil, Rex, Zulu), List(nil, Zulu, Rex), List(null, Rex, Uzi), List(Rex, Zulu, Lin), List(Rex, nil, Zulu), List(Rex, null, Uzi))&gt; but was:&lt;HashSet(List(Rex, nu, Zulu, ill), List(ex, nu, Zulu, rill), List(urn, Zulu, ill, ex), List(run, Zulu, ill, ex), List(nu, Zulu, ex, rill), List(nu, Zulu, Rex, ill), List(nu, ex, Zulu, rill), List(run, Zulu, ex, ill), List(nu, Zulu, ill, Rex), List(nu, Rex, Zulu, ill), List(run, ex, Zulu, ill), List(ex, urn, Zulu, ill), List(nu, Zulu, rill, ex), List(ex, run, Zulu, ill), List(urn, Zulu, ex, ill), List(urn, ex, Zulu, ill))&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at forcomp.AnagramsSuite.sentence$u0020anagrams$colon$u0020Linux$u0020rulez$u0020$u002810pts$u0029(AnagramsSuite.scala:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</failure>
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="subtract: lard - r (10pts)" time="0.005">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="wordAnagrams married (2pts)" time="0.003">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="sentence anagrams: [] (10pts)" time="0.007">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="wordOccurrences: Robert (3pts)" time="0.0">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="combinations: abba (8pts)" time="0.003">
                                                 
                                               </testcase><testcase classname="forcomp.AnagramsSuite" name="wordOccurrences: abcd (3pts)" time="0.002">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>